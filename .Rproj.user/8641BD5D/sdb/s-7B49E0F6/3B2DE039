{
    "contents" : "###############################################################################\n#Hummingbird Flower Interactions at the Santa Lucia and Maquipucuna EcoReserves\n###############################################################################\n#Ben Weinstein - Stony Brook University - Department of Ecology and Evolution\n\nrequire(chron)\nrequire(bipartite)\nrequire(ggplot2)\nrequire(ape)\nrequire(reshape)\nrequire(sna)\nrequire(stringr)\nrequire(maptools)\nrequire(taxize)\nrequire(picante)\nrequire(plyr)\nlibrary(scales)\n\n#Set Dropbox Location\n#setwd to dropbox\ndroppath<-\"C:/Users/Ben/Dropbox/\"\nsetwd(droppath)\n#Set github path\ngitpath<-\"C:/Users/Ben/Documents/Maquipicuna/\"\n\n#Where are the outputs?\nnetPath<-paste(droppath,\"Thesis/Maquipucuna_SantaLucia/Results/Network/\",sep=\"\")\n\n###################\n#Source Functions\n###################\n\nsource(paste(gitpath,\"NetworkSource.R\",sep=\"\"))\n\n############################################\n##############Read In Data##################\n############################################\n\n#Load image for convienance\n#load(\"Thesis/Maquipucuna_SantaLucia/Results/Network/NetworkData.Rdata\")\n\n#bring in clade data\nclades<-read.csv(paste(gitpath,\"InputData//CladeList.txt\",sep=\"\"),header=FALSE)[,-1]\ncolnames(clades)<-c(\"Clade\",\"Genus\",\"Species\",\"double\",\"English\")\nclades<-clades[,1:5]\n\n#Bring in the hummingbird phylogeny\ntree<-read.nexus(paste(gitpath,\"InputData/ColombiaPhylogenyUM.tre\",sep=\"\"))\n\n#Read in names file to replace names in Nexis file\nspnames<-read.table(paste(gitpath,\"InputData/SpNameTree.txt\",sep=\"\") , sep = \"\\t\", header = TRUE)\n\n#Replace tip.label with Spnames#\ntree$tip.label<-as.character(spnames$SpName) \n\n#Read in trait distance between species, run from Morphology.R\nsp.dist<-read.csv(\"Thesis/Maquipucuna_SantaLucia/Results/HummingbirdDist.csv\",row.names=1)\n\n#Read in plant phylogeny \npco<-read.csv(paste(gitpath,\"InputData/PlantRelatedness.csv\",sep=\"\"))\n\n###Read in Flower Camera Dataset####\ndat<-read.csv(\"Thesis/Maquipucuna_SantaLucia/Data2013/csv/FlowerVideoClean.csv\",row.names=1)\n\n#Get desired columns\n#dat<-dat[,colnames(dat) %in% c(\"ID\",\"Video\",\"Date\",\"Iplant_Double\",\"Time\",\"Hummingbird\",\"Sex\",\"Temp\",\"Pierce\",\"lon\",\"lat\",\"ele\")]\n\n#Fix date format\ndat$Month<-as.numeric(format(as.Date(dat$Date,\"%m/%d/%Y\"),\"%m\"))\n\n####Bring in interaction matrix for the flower transects, see FlowerTransects.R\ntransect.FL<-read.csv(\"Thesis/Maquipucuna_SantaLucia/Results/HummingbirdTransects/HumTransectRows.csv\",row.names=1)\n\n#make the columns as similiar as possible to videodata\ncolnames(transect.FL)<-c(\"GPS.ID\",\"TransectID\",\"Hummingbird\",\"Date\",\"Month\",\"Transect_R\",\"Iplant_Double\",\"lat\",\"lon\",\"ele\")\n\ntransect.FL$Iplant_Double<-gsub(\"_\",\" \",transect.FL$Iplant_Double)\n##############Data Imported#####################\n\n#Bind in the transect rows to the bottom of dat?\ndat<-rbind.fill(dat,transect.FL)\n\ndat$Iplant_Double<-as.factor(dat$Iplant_Double)\n############################################\n##############Data Import Complete##########\n############################################\n\n#Create Universal Date Stamp\n\ndat$DateP<-sapply(dat$Date,function(x){\n  if(is.na(x)){\n    return(NA)\n  }\n  if(str_detect(x,\"-\")){\n    toR<-as.character(strptime(x,\"%Y-%m-%d\"))\n    #print(toR)\n    return(toR)\n  }\n  \n  if(str_detect(x,\"/\")){\n    toR<-as.character(strptime(x,format=\"%m/%d/%Y\"))\n    #print(toR)\n    return(toR)\n  }\n})\n\ndat$DateP<-as.POSIXlt(dat$DateP)\n\nhead(dat)\n\n###########################\n#Hummingbird Data Cleaning \n###########################\n.simpleCap <- function(x) {\n  s <- strsplit(x, \" \")[[1]]\n  paste(toupper(substring(s, 1, 1)), substring(s, 2),\n        sep = \"\", collapse = \" \")\n}\n\n#Caps Hummingbird\ndat$Hummingbird<-factor(sapply(dat$Hummingbird,function(x) {.simpleCap(as.character(x))}))\n\n#make a object, just to save typing\nh<-levels(dat$Hummingbird)\n\nmissp<-h[!h %in% clades$English]\n\npaste(\"misspelled levels\",missp)\nh[h %in% missp]\n\nspellC<-c(\"Booted Racket-tail\",\"UKWN\",\"UKWN\",\"Violet-tailed Sylph\")\n\npaste(\"Spelling Correction\",spellC)\n\nh[h %in% missp]<-spellC\n\nhead(clades)\n\n#can taxize do english names? \nlevels(dat$Hummingbird) <- h\n\n#Take our any bad data\ndat_e<-droplevels(dat[!dat$Hummingbird %in% c(\"\",\"NANA\",\"UKWN\",\"Ukwn\",\"Western Emerald\"),])\n\n#Remove out piercing events for now?\ntable(dat$Pierce)\ndatPierce<-dat_e[dat_e$Piercing %in% c(\"Yes\",\"YES\",\"y\",\"Y\"),]\ndat_e<-dat_e[!dat_e$Pierce %in% c(\"Yes\",\"YES\",\"y\",\"Y\"),]\n\n#remove species without double name\n\n#Drop any unused factors?\ndat_e<-droplevels(dat_e)\n\n#Drop any observations without plants\ndat_e<-droplevels(dat_e[!dat_e$Iplant_Double %in% \"\",])\n\nsp_l<-levels(dat_e$Iplant_Double)\n\nl<-sapply(sp_l,function(x){\n  str2 <- gsub(' {2,}',' ',x)\n  length(strsplit(str2,' ')[[1]])\n})\n\nsp_r<-names(which(l==1))\n\ndat_e<-droplevels(dat_e[!dat_e$Iplant_Double %in% sp_r,])\n#################Data Cleaning Complete################\n\n#Final levels\n#print(paste(\"Final Flower Species:\", levels(factor(dat_e$Iplant_Double))))\n\n#How many Birds Species\n#print(paste(\"Number of Hummingbird Species:\",nlevels(dat_e$Hummingbird)))\n#print(paste(\"Final Hummingbird Species:\",levels(dat_e$Hummingbird)))\n\nwrite.csv(dat_e,\"Thesis/Maquipucuna_SantaLucia/Results/Network/HummingbirdInteractions.csv\")\n\n#print(\"data cleaned\")\n\n############################################\n#Run Network Function for the entire dataset\nNetworkC(datf=dat_e,naming=\"Total\",plots=T)\n############################################\n\n#############################################\n#Temporal Change in Network Structure\n#############################################\n#make a year columns\ndat_e$Year<-years(dat_e$DateP)\ndat_e[dat_e$Year %in% \"2012\",\"Year\"]<-2013\ndat.split<-split(dat_e,list(dat_e$Month,dat_e$Year),drop=TRUE)\n\n#which months have been run?\ntorun<-dat.split[!names(dat.split) %in% list.files(paste(netPath,\"Temporal\",sep=\"/\"))]\n\n#not 1.2013\ntorun<-torun[!names(torun) %in% \"1.2013\"]\n#############################################\n#Compute metrics for each month\n#############################################\nif(length(torun)>0){\nfor (x in 1:length(torun)){\n  NetworkC(datf=torun[[x]],naming=paste(\"Temporal\",names(torun)[[x]],sep=\"/\"))\n}}\n\n\n############################################\n##############Networks Created##############\n############################################\n\n##################################\n#Retrieve Classes, name them, melt \n#Start with networkwide properties\n##################################\n\n#Get the desired files from paths - within time?\nfil.list<-list.files(paste(netPath,\"Temporal\",sep=\"/\"),pattern=\"NetworkProperties.csv\",recursive=TRUE,full.names=TRUE)\n\nfil<-list()\n#Read and name each file\nfor (x in 1:length(fil.list)){\n  fil[[x]]<-read.csv(fil.list[[x]])\n  names(fil)[x]<-strsplit(fil.list[[x]],\"/\")[[1]][11]\n}\n\n#melt the outputs to a single dataframe\nm.Prop<-melt(fil)\ncolnames(m.Prop)<-c(\"Metric\",\"Level\",\"value\",\"Time\")\n\n#Correct the naming of levels\nlevels(m.Prop$Level)<-c(\"Hummingbirds\",\"Plants\")\n\n#If you want to remove overall metrics\nmonth.Prop<-m.Prop[!m.Prop$Time==\"Total\",]\n\n#write csv to file\nwrite.csv(month.Prop,\"C:/Users/Ben/Dropbox/Thesis/Maquipucuna_SantaLucia/Results/Network/timeMetrics.csv\")\n\n#For each metric plot them with time\ndir.create(paste(netPath,\"TimeFigures\",sep=\"\"))\nsetwd(paste(netPath,\"TimeFigures\",sep=\"\"))\n\n#Which metrics are desired?\ndroplevels(month.Prop)\n\n#metricskeep<-c(\"connectance\",\"links per species\",\"nestedness\",\"Shannon diversity\",\"H2\",\"niche overlap\",\"robustness.HL\",\"number of compartments\",\"robustness.LL\",\"number.of.species.HL\")\n#month.Prop<-droplevels(month.Prop[month.Prop$Metric %in% metricskeep,])\n\n#format time\nmonth.Prop$Month<-as.numeric(sapply(month.Prop$Time,function(x){  strsplit(x,\"\\\\.\")[[1]][1]}))\nmonth.Prop$Year<-as.numeric(sapply(month.Prop$Time,function(x){  strsplit(x,\"\\\\.\")[[1]][2]}))\nmonth.Prop$Date<-paste(\"1\",month.Prop$Month,month.Prop$Year,sep=\"/\")\n\n\nmonth.Prop$Date<-as.Date(month.Prop$Date,format=\"%d/%m/%Y\")\n\n\np<-ggplot(na.omit(month.Prop),aes(x=Date,y=value,col=Level)) + geom_point() + geom_line(linetype=\"dashed\",aes(group=Level)) + facet_wrap(~Metric,scales=\"free_y\",ncol=4) \np<-p + theme_bw() + scale_x_date(labels = date_format(\"%b-%y\"),breaks= \"4 months\") + geom_smooth(col=\"black\",linetype=\"dashed\",size=.5)\nggsave(\"MetricsFacet.svg\",height=8,width=11)\n\nprint(p)\n##Add a trend line across all months?\n\n#be interested to add a \"mean line\" and then the value of the total network...\n\n\ndir.create(\"Metric_TimePlots\")\nsetwd(\"Metric_TimePlots\")\n\n#Individual plots\nfor(x in levels(month.Prop$Metric)) {\n  toplot<-na.omit(month.Prop[month.Prop$Metric %in% x,])\n  \n  #If there are no records, go to next metric\n  if(nrow(toplot)==0) next\n  \n  #Plot and Save\n  p<-ggplot(toplot,aes(x=as.numeric(Time),y=value,col=Level)) + geom_point() + geom_line(linetype=\"dashed\",aes(group=Level))\n  p + theme_bw() + ylab(x)\n  ggsave(paste(x,\".svg\",sep=\"\"),height=8,width=11)\n}\n\n##############################################\n#Compute Metrics for each Humminbird species\n##############################################\n\n#Get the desired files from paths\nfil.list<-list.files(paste(netPath,\"Temporal\",sep=\"/\"),pattern=\"HummingbirdMetrics.csv\",recursive=TRUE,full.names=TRUE)\n\nfil<-list()\n#Read and name each file\nfor (x in 1:length(fil.list)){\n  fil[[x]]<-read.csv(fil.list[[x]])\n  names(fil)[x]<-strsplit(fil.list[[x]],\"/\")[[1]][11]\n}\n\nHum.Time<-melt(fil)\ncolnames(Hum.Time)<-c(\"Species\",\"Metric\",\"value\",\"Time\")\n\n#Just get the Metrics which make sense for this analysis\nhead(Hum.Time)\n\n#format time\nHum.Time$Month<-as.numeric(sapply(Hum.Time$Time,function(x){  strsplit(x,\"\\\\.\")[[1]][1]}))\nHum.Time$Year<-as.numeric(sapply(Hum.Time$Time,function(x){  strsplit(x,\"\\\\.\")[[1]][2]}))\nHum.Time$Date<-paste(\"1\",Hum.Time$Month,Hum.Time$Year,sep=\"/\")\n\n\nHum.Time$Date<-as.Date(Hum.Time$Date,format=\"%d/%m/%Y\")\n\nmetricskeep<-c(\"nestedrank\",\"resource.range\",\"betweenness\",\"d\",\"degree\",\"species.strength\")\n  Hum.Time<-droplevels(Hum.Time[Hum.Time$Metric %in% metricskeep ,])\n\n#Probably should exclude rare species?\nH.c<-cast(Hum.Time,...~Metric)\nHum.Time<-melt(H.c)\n\n#Quick and dirty look across species \nggplot(Hum.Time,aes(Date,value,col=Species)) + facet_grid(Species~Metric,scales=\"free_x\") + geom_line(linetype=\"dashed\",aes(group=Species)) + geom_point() + theme_bw() + scale_x_date(breaks=\"4 months\")\nggsave(paste(netPath,\"TimeFigures/HumSpecies_Time.svg\",sep=\"\"),height=8,width=11)\n\nggplot(Hum.Time[Hum.Time$Metric %in% \"d\",],aes(Date,value,col=Species)) + facet_wrap(~Species,scales=\"free_x\") + geom_line(linetype=\"dashed\",aes(group=Species)) + geom_point() + theme_bw() + scale_x_date(breaks=\"4 months\")\n\n#Plot for each species, or for each metric?\nfor(x in levels(droplevels(Hum.Time$Species))){\n  if(nrow(Hum.Time[Hum.Time$Species %in% x & !Hum.Time$Time %in% \"Total\",])==0) next\n  \n  #drop the total column and added a dashed total line\n  p<-ggplot(Hum.Time[Hum.Time$Species %in% x & !Hum.Time$Time %in% \"Total\",],aes(as.numeric(Time),value)) + facet_wrap(~Metric,scales=\"free\") + geom_line(linetype=\"dashed\",aes(group=Species)) + geom_point() + theme_bw()\n  p\n  ggsave(paste(netPath,paste(x,\".svg\",sep=\"\"),sep=\"TimeFigures/\"),height=8,width=11) \n\n}\n\n#######################################################################\n#Bring in Transect Data and Compare Specilization and available resources across all Elevations\n#######################################################################\n#At first just use the across entire network properies and all flowers from all elevations\n#The next step is to set species ranges and get flower transects across that range\n\n#The script FlowerTransects.R must be run\n#source(paste(gitpath),\"FlowerTransects.R\")\n\n####################\n#Network Properties\nhead(month.Prop)\n####################\n\n########################################################\n#For now there is a bit of a mismatch, since the network \n#is not split by elevation, but the flowers are aggregated into 200m bins\n#########################################################\n\nsetwd(droppath)\nload(\"Thesis/Maquipucuna_SantaLucia/Results/FlowerTransect.Rdata\")\n\n#setwd to dropbox\ndroppath<-\"C:/Users/Ben/Dropbox/\"\nsetwd(droppath)\n#Set github path\ngitpath<-\"C:/Users/Ben/Documents/Maquipicuna/\"\n\n#The aggregate totals of the flower assemblage\nhead(fl.totals)\n\n#aggregate by month for now, not elev split\nmonth.totals<-aggregate(fl.totals$TotalFlowers/1000,list(fl.totals$Month,fl.totals$Year),sum)\ncolnames(month.totals)<-c(\"Month\",\"Year\",\"Flowers\")\n\n#Start with just hummingbird levels\nmonth.Hum<-month.Prop[month.Prop$Level == \"Hummingbirds\",]\n\n#combine the flower totals and network metrics\nnetwork.fl<-merge(month.totals,month.Hum,by=c(\"Month\",\"Year\"))\n\n#write to file\nwrite.csv(network.fl,\"C:\\\\Users\\\\Ben\\\\Dropbox\\\\Thesis\\\\Maquipucuna_SantaLucia\\\\Results\\\\Network//networkflowers.csv\")\n#Quick visualization, \np<-ggplot(network.fl[,],aes(Flowers,value,shape=Year,col=as.factor(Month))) + facet_wrap(~Metric,scale=\"free\") + geom_point(size=3) + geom_smooth(method=\"lm\",aes(group=Year)) + theme_bw()\nprint(p)\nggsave(paste(netPath,\"NetworkPropFlowers.svg\",sep=\"\"),height=8,width=11,dpi=300)\n\np<-ggplot(network.fl[ network.fl$Metric %in% c(\"connectance\",\"cluster coefficient\"),],aes(Flowers,value,shape=Year,col=as.factor(Month))) + facet_wrap(~Metric,scale=\"free\",nrow=2) + geom_point(size=3) + geom_smooth(method=\"lm\",aes(group=Year)) + theme_bw() + labs(col=\"Month\")\nggsave(paste(netPath,\"NetworkConnectance.jpeg\",sep=\"\"),height=11,width=8,dpi=300) \n\n###############################################\n#Hummingbird Properties and Available Resources\n###############################################\nhead(Hum.Time)\n\n#Take out the total time\nHum.Time<-Hum.Time[!Hum.Time$Time %in% \"Total\",]\nhum.fl<-merge(month.totals,Hum.Time,by=c(\"Month\",\"Year\"))\n\n#Need to subset by number of interactions, get rid of the species just seen once?\nwith(hum.fl,table(Species,Month))\nmonth_Pres<-aggregate(hum.fl$Month,list(hum.fl$Species),function(x) nlevels(factor(x)))\n\n#Keep species seen more than 1 month\nspecies_keep<-month_Pres[which(month_Pres$x > 1),]$Group.1\n\n#remove an unknwon species\nspecies_keep<-species_keep[!species_keep %in% \"UKWN\"]\nggplot(hum.fl[hum.fl$Species %in% species_keep,],aes(as.numeric(Flowers),value,col=as.factor(Month))) + facet_wrap(~Metric,scale=\"free\") + geom_point() + geom_smooth(method=\"lm\",aes(group=1))\nggsave(paste(netPath,\"SpeciesPropFlowers.svg\",sep=\"\"),height=8,width=11,dpi=300)\n\n#Save image to file\nsetwd(droppath)\nsave.image(\"Thesis/Maquipucuna_SantaLucia/Results/Network/NetworkData.Rdata\")",
    "created" : 1460559884956.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "426781112",
    "id" : "3B2DE039",
    "lastKnownWriteTime" : 1451794465,
    "path" : "~/Maquipicuna/Network.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}